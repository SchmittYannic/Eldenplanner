@use "../../Variables" as v;

.charplanner__header {
    width: 100%;
    padding-left: v.$FormPaddingLeft;
    padding-right: v.$FormPaddingRight;

    h1 {
        text-align: center;
    }

    p {
        line-height: 1.25rem;
        color: hsl(v.$muted-foreground);
    }
}

.Charplanner {
    min-width: v.$min-page-width;
    background-color: v.$default-background-color;
    color: v.$default-font-color;
    font-family: v.$default-font-family;
    font-size: v.$default-font-size;

    .text-left {
        text-align: left;
    }

    .text-right {
        text-align: right;
    }

    .WeaponsSubSection,
    .TalismanSubSection,
    .ArmorSubSection {
        display: grid;
        grid-template-columns: 1fr 1fr;
    }

    .DetailSubSection {
        line-height: 1.5;
        padding: v.$FormPadding;
        display: grid;
        grid-template-columns: 1fr 2fr;
    }

    .DefenseSubSection,
    .ResistanceSubSection {
        line-height: 1.5;
        padding: v.$FormPadding;
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
    }
}

.NameSubSection .Row {
    display: flex;
    align-items: end;

    .customselect {
        flex-grow: 1;
    }

    .checkbox {
        padding-right: v.$FormPaddingRight;
    }
}

@media only screen and (min-width: 980px) {
    .Charplanner {
        min-height: 1100px;
        max-width: 1200px;
        display: grid;
        grid-template-columns: 3fr 1px 4fr 1px 2fr;
        justify-items: center;

        .CharacterSection {
            max-width: 400px;
        }

        .EquipmentSection {
            max-width: 500px;
        }

        .InfoSection {
            max-width: 300px;
        }
    }
}


/* AttributesSubSection */

.AttributesSubSection {
    .RuneLevel {
        padding-left: v.$FormPaddingLeft;
        padding-right: v.$FormPaddingRight;
        padding-top: .2em;
        padding-bottom: .2em;
        display: grid;
        grid-template-columns: 1fr 5fr;

        span:last-of-type {
            text-align: center;
        }
    }


    .AttributeRow {
        padding-left: v.$FormPaddingLeft;
        padding-right: v.$FormPaddingRight;
        padding-top: .4em;
        padding-bottom: .4em;
        display: grid;
        grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
        align-items: center;

        &:nth-of-type(2) {
            padding-top: .8em;
            padding-bottom: 0;
            color: v.$default-label-font-color;
        }

        /* Chrome, Safari, Edge, Opera */
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=text] {
            margin: auto;
            -moz-appearance: textfield;
            appearance: textfield;
            text-align: center;
            color: inherit;
            font-family: inherit;
            font-size: inherit;
            background-color: hsl(v.$background);
            width: 50px;
            border-color: v.$default-focus-label-font-color;
            border-radius: 5px;
            padding: .2em;
            outline: none;

            &:hover {
                background-color: hsl(v.$foreground);
            }

            &:focus {
                border-color: orange;
            }
        }

        span:not(:first-of-type) {
            text-align: center;
        }

        span:last-of-type {
            display: flex;
            justify-content: space-evenly;
        }

        button {
            display: flex;
            align-items: center;
            background-color: inherit;
            border: none;
            border-radius: 50%;
            color: hsl(v.$muted-foreground);
            transform: scale(2);

            svg {
                width: 16px;
                height: 16px;
            }

            &:not(:disabled):hover {
                color: hsl(v.$accent-foreground);
            }

            &:focus {
                background-color: hsl(v.$foreground);
            }

            &:not(:disabled):active {
                svg {
                    transition-property: transform;
                    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
                    transition: transform .05s;
                    transform: scale(.75);
                }
            }

            &:disabled {
                cursor: default;
                opacity: .5;
            }
        }
    }

    .RuneCost div {
        padding-left: v.$FormPaddingLeft;
        padding-right: v.$FormPaddingRight;
        padding-top: .7em;
        padding-bottom: .7em;
        display: grid;
        grid-template-columns: 2fr 1fr 1fr 1fr 1fr;

        span:first-of-type {
            grid-column-start: 1;
            grid-column-end: 3;
        }

        span:last-of-type {
            grid-column-start: 3;
            grid-column-end: 6;
        }
    }
}

.WeaponsSubSection .checkbox {
    padding-left: v.$FormPaddingLeft;
}

.weaponslot {
    margin-bottom: .5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    .weaponslot-details {
        padding-left: .7em;
        padding-right: .7em;
    }

    .upgrade-affinity-wrapper {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: .25rem;
    }
}


/* ARDisplay */

.ARDisplay {
    width: 100%;
    position: relative;
    padding-left: v.$FormPaddingLeft;
    padding-right: v.$FormPaddingRight;
    font-size: 0.885rem;
    line-height: 1;
    color: v.$default-label-font-color;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    flex-wrap: wrap;

    span {
        padding-bottom: v.$FormPaddingBottom;
    }

    .arText,
    .reqText {
        min-height: 0.885rem;
    }

    .redText {
        div:not(.Tooltip) {
            color: hsl(v.$err-background-color);
        }

        .Tooltip {
            background-color: hsl(v.$err-background-color);
        }
    }

    .Tooltip {
        visibility: hidden;
        position: absolute;
        top: 20px;
        padding: 1.2rem;
        font-size: v.$font-size-small;
        line-height: 1;
        background-color: v.$default-focus-label-font-color;
        color: black;
        border-radius: v.$border-radius;
        white-space: pre-wrap;
        z-index: 3;
        transform: scale(0.8);
        transition: transform 300ms ease;

        &.left {
            left: 0px;
        }

        &.right {
            right: 0px;
        }
    }

    span:hover>.Tooltip,
    span:focus>.Tooltip {
        visibility: visible;
        transform: scale(1);
    }
}

;

.Invisible {
    opacity: 0;
    visibility: hidden;
}


/* Charplanner__actionscontainer */

.charplanner__actionscontainer {
    width: 100%;
    padding: 2.5rem 0;
    grid-column-start: 1;
    grid-column-end: 4;
    display: flex;
    gap: 1rem;
    justify-content: end;
    align-items: center;

    >.action-btn,
    >.button {
        padding: 1.5rem 1.5rem;
        font-size: 1.25rem;
    }
}